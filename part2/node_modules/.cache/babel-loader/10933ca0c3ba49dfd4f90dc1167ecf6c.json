{"ast":null,"code":"var _jsxFileName = \"/home/kumakura/Documents/web/part1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.handleClick,\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\n\nconst Statistic = ({\n  text,\n  value\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Statistic;\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad\n}) => {\n  if (good + neutral + bad === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(Statistic, {\n      text: \"good\",\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      text: \"neutral\",\n      value: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      text: \"bad\",\n      value: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      text: \"all\",\n      value: good + neutral + bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      text: \"average\",\n      value: (good - bad) / Math.max(good + neutral + bad, 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      text: \"positive\",\n      value: good / Math.max(good + neutral + bad, 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleGood = () => setGood(good + 1);\n\n  const handleNeutral = () => setNeutral(neutral + 1);\n\n  const handleBad = () => setBad(bad + 1);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleBad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistic\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/home/kumakura/Documents/web/part1/src/App.js"],"names":["React","useState","Button","props","handleClick","text","Statistic","value","Statistics","good","neutral","bad","Math","max","App","setGood","setNeutral","setBad","handleGood","handleNeutral","handleBad"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,sBACE;AAAQ,IAAA,OAAO,EAAEA,KAAK,CAACC,WAAvB;AAAA,cACGD,KAAK,CAACE;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;KAAMH,M;;AAQN,MAAMI,SAAS,GAAG,CAAC;AAACD,EAAAA,IAAD;AAAOE,EAAAA;AAAP,CAAD,KAAmB;AACnC,sBACE;AAAA,4BACE;AAAA,gBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAPD;;MAAMD,S;;AASN,MAAME,UAAU,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA;AAAhB,CAAD,KAA0B;AAC3C,MAAIF,IAAI,GAAGC,OAAP,GAAiBC,GAAjB,KAAyB,CAA7B,EAAgC;AAC9B,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AACD,sBACE;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,IAAI,EAAC,MAAhB;AAAuB,MAAA,KAAK,EAAEF;AAA9B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,IAAI,EAAC,SAAhB;AAA0B,MAAA,KAAK,EAAEC;AAAjC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,SAAD;AAAW,MAAA,IAAI,EAAC,KAAhB;AAAsB,MAAA,KAAK,EAAEC;AAA7B;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,SAAD;AAAW,MAAA,IAAI,EAAC,KAAhB;AAAsB,MAAA,KAAK,EAAEF,IAAI,GAAGC,OAAP,GAAiBC;AAA9C;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,SAAD;AAAW,MAAA,IAAI,EAAC,SAAhB;AAA0B,MAAA,KAAK,EAAE,CAACF,IAAI,GAAGE,GAAR,IAAeC,IAAI,CAACC,GAAL,CAASJ,IAAI,GAAGC,OAAP,GAAiBC,GAA1B,EAA+B,CAA/B;AAAhD;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,SAAD;AAAW,MAAA,IAAI,EAAC,UAAhB;AAA2B,MAAA,KAAK,EAAGF,IAAD,GAASG,IAAI,CAACC,GAAL,CAASJ,IAAI,GAAGC,OAAP,GAAiBC,GAA1B,EAA+B,CAA/B;AAA3C;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAhBD;;MAAMH,U;;AAkBN,MAAMM,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACL,IAAD,EAAOM,OAAP,IAAkBd,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACS,OAAD,EAAUM,UAAV,IAAwBf,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACU,GAAD,EAAMM,MAAN,IAAgBhB,QAAQ,CAAC,CAAD,CAA9B;;AAEA,QAAMiB,UAAU,GAAG,MAAMH,OAAO,CAACN,IAAI,GAAG,CAAR,CAAhC;;AACA,QAAMU,aAAa,GAAG,MAAMH,UAAU,CAACN,OAAO,GAAG,CAAX,CAAtC;;AACA,QAAMU,SAAS,GAAG,MAAMH,MAAM,CAACN,GAAG,GAAG,CAAP,CAA9B;;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAEO,UAArB;AAAiC,MAAA,IAAI,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAEC,aAArB;AAAoC,MAAA,IAAI,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAEC,SAArB;AAAgC,MAAA,IAAI,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEX,IAAlB;AAAwB,MAAA,OAAO,EAAEC,OAAjC;AAA0C,MAAA,GAAG,EAAEC;AAA/C;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CApBD;;GAAMG,G;;MAAAA,G;AAsBN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst Button = (props) => {\n  return (\n    <button onClick={props.handleClick}>\n      {props.text}\n    </button>\n  );\n}\n\nconst Statistic = ({text, value}) => {\n  return (\n    <tr>\n      <td>{text}</td>\n      <td>{value}</td>\n    </tr>\n  );\n}\n\nconst Statistics = ({good, neutral, bad}) => {\n  if (good + neutral + bad === 0) {\n    return (\n      <div>No feedback given</div>\n    );\n  }\n  return (\n    <table>\n      <Statistic text=\"good\" value={good}/>\n      <Statistic text=\"neutral\" value={neutral}/>\n      <Statistic text=\"bad\" value={bad}/>\n      <Statistic text=\"all\" value={good + neutral + bad}/>\n      <Statistic text=\"average\" value={(good - bad) / Math.max(good + neutral + bad, 1)}/>\n      <Statistic text=\"positive\" value={(good) / Math.max(good + neutral + bad, 1)}/>\n    </table>\n  );\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGood = () => setGood(good + 1);\n  const handleNeutral = () => setNeutral(neutral + 1);\n  const handleBad = () => setBad(bad + 1);\n\n  return (\n    <div>\n      <h1> give feedback</h1>\n      <Button handleClick={handleGood} text=\"good\"/>\n      <Button handleClick={handleNeutral} text=\"neutral\"/>\n      <Button handleClick={handleBad} text=\"bad\"/>\n      <h1> statistics</h1>\n      <Statistics good={good} neutral={neutral} bad={bad}/>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}